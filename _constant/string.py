# Standard library imports.
import random
import string as str_lib

# Project-specific module imports.
from _constant.integer import Integer

class String():
    """
    
    String is a class that provides string constants to be utilized all over the project.
    It provides a central place for the management of all string literals.
    Besides that, String provides a method for the generation of random strings.

    """


    # Constants for the storage of ASCII colors.
    ASCII_BLUE = '\033[94m'
    ASCII_ENC = '\033[0m'
    ASCII_GREEN = '\033[92m'
    ASCII_PURPLE = '\033[95m'
    ASCII_RED = '\033[91m'
    ASCII_YELLOW = '\033[93m'

    # Constants for the storage of string literals in relation to the backup service.
    BACKUP_FILE_EXTENSION = '.bak'
    BACKUP_FILENAME = '_.json'
    BACKUP_LOCK_FILENAME_LINUX = '.BACKUP_ENABLED.lock'
    BACKUP_LOCK_FILENAME_WINDOWS = 'BACKUP_ENABLED.lock'
    BACKUP_SERVICE_FILENAME = 'backup_service.py'
    
    # Constants for the storage of PowerShell and shell commands.
    COMMAND_DISABLE_CRONJOB_VIA_SHELL_ON_LINUX = r"""ROOT_PASSWORD=%s; if echo "$ROOT_PASSWORD" | su -c "crontab -l" 2>/dev/null | grep -qF "@reboot cd %s && %s %s"; then echo "$ROOT_PASSWORD" | su -c "crontab -l | grep -vF \"@reboot cd %s && %s %s\" | crontab -"; COMMAND='%s %s'; PIDS=$(pgrep -f "$COMMAND"); if [ -n "$PIDS" ]; then for PID in $PIDS; do echo "$ROOT_PASSWORD" | su -c "kill \"$PID\" 2>/dev/null"; done; else :; fi; else COMMAND='%s %s'; PIDS=$(pgrep -f "$COMMAND"); if [ -n "$PIDS" ]; then for PID in $PIDS; do echo "$ROOT_PASSWORD" | su -c "kill \"$PID\" 2>/dev/null"; done; else :; fi; fi"""
    COMMAND_DISABLE_STRICT_ACCESS_TIME_ON_WINDOWS = r""" if ((New-Object System.Security.Principal.WindowsPrincipal([System.Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([System.Security.Principal.WindowsBuiltInRole]::Administrator)) { fsutil behavior set disablelastaccess 2 } else { Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `" fsutil behavior set disablelastaccess 2 `"" -Verb RunAs } """
    COMMAND_DISABLE_TASK_VIA_POWERSHELL_ON_WINDOWS = r"""if ((New-Object System.Security.Principal.WindowsPrincipal([System.Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([System.Security.Principal.WindowsBuiltInRole]::Administrator)) { if ($null -ne (Get-ScheduledTask | Where-Object { $_.TaskName -eq '%s' })) { Stop-ScheduledTask -TaskName '%s'; Unregister-ScheduledTask -TaskName '%s' -Confirm:$false } } else { Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `"if (`$null -ne (Get-ScheduledTask | Where-Object { `$_.TaskName -eq '%s' })) { Stop-ScheduledTask -TaskName '%s'; Unregister-ScheduledTask -TaskName '%s' -Confirm:`$false}`"" -Verb RunAs }"""
    COMMAND_ENABLE_CRONJOB_VIA_SHELL_ON_LINUX = r"""ROOT_PASSWORD=%s; if echo "$ROOT_PASSWORD" | su -c "crontab -l" 2>/dev/null | grep -qF "@reboot cd %s && %s %s"; then :; else echo "$ROOT_PASSWORD" | su -c "crontab -l" > /tmp/cron.$$ 2>/dev/null; echo "@reboot cd %s && %s %s" >> /tmp/cron.$$; echo "$ROOT_PASSWORD" | su -c "crontab /tmp/cron.$$" 2>/dev/null; (cd %s && %s %s > /dev/null 2>&1 &); rm /tmp/cron.$$; fi"""
    COMMAND_ENABLE_STRICT_ACCESS_TIME_ON_WINDOWS = r""" if ((New-Object System.Security.Principal.WindowsPrincipal([System.Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([System.Security.Principal.WindowsBuiltInRole]::Administrator)) { fsutil behavior set disablelastaccess 0 } else { Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `" fsutil behavior set disablelastaccess 0 `"" -Verb RunAs } """
    COMMAND_ENABLE_TASK_VIA_POWERSHELL_ON_WINDOWS = r"""if ((New-Object System.Security.Principal.WindowsPrincipal([System.Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([System.Security.Principal.WindowsBuiltInRole]::Administrator)) { if (-not (Get-ScheduledTask | Where-Object { $_.TaskName -eq '%s' })) { Register-ScheduledTask -TaskName '%s' -InputObject (New-ScheduledTask -Action (New-ScheduledTaskAction -Execute '%s' -Argument '%s' -WorkingDirectory '%s') -Trigger (New-ScheduledTaskTrigger -AtStartup) -Principal (New-ScheduledTaskPrincipal -UserId 'NT AUTHORITY\SYSTEM' -LogonType ServiceAccount -RunLevel Highest) -Description '%s'); Start-ScheduledTask -TaskName '%s' } } else { Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command `"if (-not (Get-ScheduledTask | Where-Object { `$_.TaskName -eq '%s' })) { Register-ScheduledTask -TaskName '%s' -InputObject (New-ScheduledTask -Action (New-ScheduledTaskAction -Execute '%s' -Argument '%s' -WorkingDirectory '%s') -Trigger (New-ScheduledTaskTrigger -AtStartup) -Principal (New-ScheduledTaskPrincipal -UserId 'NT AUTHORITY\SYSTEM' -LogonType ServiceAccount -RunLevel Highest) -Description '%s'); Start-ScheduledTask -TaskName '%s'} `"" -Verb RunAs }"""
    COMMAND_GET_LOGGED_ON_USERS_ON_LINUX = r"""who | awk '{printf "%s\\%s@%s\n", "'$(hostname)'", $1, $2}' | sort -u"""
    COMMAND_GET_LOGGED_ON_USERS_ON_WINDOWS = r"""(Get-WmiObject -Class Win32_LoggedOnUser).Antecedent | ForEach-Object { $u = $_ -replace '^.*Domain="([^"]*)".*Name="([^"]*)".*$', '$2'; if (Get-LocalUser -Name $u) { $_ -replace '^.*Domain="([^"]*)".*Name="([^"]*)".*$', '$1\$2' } } | Where-Object { $_ } | Sort-Object -Unique"""
    COMMAND_HIDE_FILE_ON_WINDOWS = 'attrib +h'
    COMMAND_RESET_CONSOLE = 'cls||clear'
    COMMAND_SUPERUSER_ON_LINUX = 'su'
    
    # Constant for the storage of the delimiter between attributes in monitoring log files.
    DELIMITER_MONITORING_LOG_FILE = '      '
    
    # Constants for the storage of various error messages.
    EXCEPTION_MESSAGE_FILE_NOT_FOUND_ERROR = 'FILE NOT FOUND.'
    EXCEPTION_MESSAGE_JSON_DECODE_ERROR = 'ERROR DECODING JSON.'
    
    # Constants for the storage of file open modes.
    FILE_MODE_APPEND = 'a'
    FILE_MODE_CREATE = 'x'
    FILE_MODE_READ = 'r'
    FILE_MODE_WRITE = 'w'
    
    # Constants for the storage of various timestamp formats.
    FORMAT_CURRENT_TIME = '%Y-%m-%d_%H-%M-%S'
    FORMAT_LAST_ACCESS_TIME = '%Y-%m-%d_%H-%M-%S'
    FORMAT_LAST_MODIFIED_TIME = '%Y-%m-%d_%H-%M-%S'
    
    # Constants for the storage of language dictionary keys.
    LANGUAGE_KEY_ACCESSED_AT = '#_ACCESSED_AT'
    LANGUAGE_KEY_ADDED_AT = '#_ADDED_AT'
    LANGUAGE_KEY_ADDED_BY = '#_ADDED_BY'
    LANGUAGE_KEY_BACKUP_DIRNAME = '#_BACKUP_DIRNAME'
    LANGUAGE_KEY_BACKUP_SERVICE_STATUS = '#_BACKUP_SERVICE_STATUS'
    LANGUAGE_KEY_DESCRIBE_AUTOSTART_BACKUP_FOR_LINUX = '#_DESCRIBE_AUTOSTART_BACKUP_FOR_LINUX'
    LANGUAGE_KEY_DESCRIBE_AUTOSTART_BACKUP_FOR_WINDOWS = '#_DESCRIBE_AUTOSTART_BACKUP_FOR_WINDOWS'
    LANGUAGE_KEY_DESCRIBE_AUTOSTART_MONITORING_FOR_LINUX = '#_DESCRIBE_AUTOSTART_MONITORING_FOR_LINUX'
    LANGUAGE_KEY_DESCRIBE_AUTOSTART_MONITORING_FOR_WINDOWS = '#_DESCRIBE_AUTOSTART_MONITORING_FOR_WINDOWS'
    LANGUAGE_KEY_DESCRIBE_BACKUP_CONFIGURATOR_FOR_DIRECTORY = '#_DESCRIBE_BACKUP_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_DESCRIBE_BACKUP_CONFIGURATOR_FOR_FILE = '#_DESCRIBE_BACKUP_CONFIGURATOR_FOR_FILE'
    LANGUAGE_KEY_DESCRIBE_BACKUP_DIRECTORY = '#_DESCRIBE_BACKUP_DIRECTORY'
    LANGUAGE_KEY_DESCRIBE_BACKUP_REMOVER_FOR_DIRECTORY_ONE = '#_DESCRIBE_BACKUP_REMOVER_FOR_DIRECTORY_ONE'
    LANGUAGE_KEY_DESCRIBE_BACKUP_REMOVER_FOR_DIRECTORY_TWO = '#_DESCRIBE_BACKUP_REMOVER_FOR_DIRECTORY_TWO'
    LANGUAGE_KEY_DESCRIBE_BACKUP_REMOVER_FOR_SINGLE_FILE_ONE = '#_DESCRIBE_BACKUP_REMOVER_FOR_SINGLE_FILE_ONE'
    LANGUAGE_KEY_DESCRIBE_BACKUP_REMOVER_FOR_SINGLE_FILE_TWO = '#_DESCRIBE_BACKUP_REMOVER_FOR_SINGLE_FILE_TWO'
    LANGUAGE_KEY_DESCRIBE_MONITORING_CONFIGURATOR_FOR_DIRECTORY = '#_DESCRIBE_MONITORING_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_DESCRIBE_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE = '#_DESCRIBE_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_DESCRIBE_MONITORING_DIRECTORY = '#_DESCRIBE_MONITORING_DIRECTORY'
    LANGUAGE_KEY_DESCRIBE_MONITORING_LOG_VIEWER_FOR_DIRECTORY_ONE = '#_DESCRIBE_MONITORING_LOG_VIEWER_FOR_DIRECTORY_ONE'
    LANGUAGE_KEY_DESCRIBE_MONITORING_LOG_VIEWER_FOR_DIRECTORY_TWO = '#_DESCRIBE_MONITORING_LOG_VIEWER_FOR_DIRECTORY_TWO'
    LANGUAGE_KEY_DESCRIBE_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_ONE = '#_DESCRIBE_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_ONE'
    LANGUAGE_KEY_DESCRIBE_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_TWO = '#_DESCRIBE_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_TWO'
    LANGUAGE_KEY_DESCRIBE_MONITORING_REMOVER_FOR_DIRECTORY_ONE = '#_DESCRIBE_MONITORING_REMOVER_FOR_DIRECTORY_ONE'
    LANGUAGE_KEY_DESCRIBE_MONITORING_REMOVER_FOR_DIRECTORY_TWO = '#_DESCRIBE_MONITORING_REMOVER_FOR_DIRECTORY_TWO'
    LANGUAGE_KEY_DESCRIBE_MONITORING_REMOVER_FOR_SINGLE_FILE_ONE = '#_DESCRIBE_MONITORING_REMOVER_FOR_SINGLE_FILE_ONE'
    LANGUAGE_KEY_DESCRIBE_MONITORING_REMOVER_FOR_SINGLE_FILE_TWO = '#_DESCRIBE_MONITORING_REMOVER_FOR_SINGLE_FILE_TWO'
    LANGUAGE_KEY_DESCRIBE_REQUIREMENTS_FOR_LINUX = '#_DESCRIBE_REQUIREMENTS_FOR_LINUX'
    LANGUAGE_KEY_DESCRIBE_REQUIREMENTS_FOR_WINDOWS = '#_DESCRIBE_REQUIREMENTS_FOR_WINDOWS'
    LANGUAGE_KEY_DISABLED = '#_DISABLED'
    LANGUAGE_KEY_ENABLED = '#_ENABLED'
    LANGUAGE_KEY_EXIT = '#_EXIT'
    LANGUAGE_KEY_GO_BACKWARD = '#_GO_BACKWARD'
    LANGUAGE_KEY_ID = '#_ID'
    LANGUAGE_KEY_LANGUAGE = '#_LANGUAGE'
    LANGUAGE_KEY_LOG_FILENAME = '#_LOG_FILENAME'
    LANGUAGE_KEY_MODIFIED_AT = '#_MODIFIED_AT'
    LANGUAGE_KEY_MONITORING_SERVICE_STATUS = '#_MONITORING_SERVICE_STATUS'
    LANGUAGE_KEY_NOT_OK = '#_NOT_OK'
    LANGUAGE_KEY_NOTIFY_EMPTINESS_BACKUP_REMOVER_FOR_DIRECTORY = '#_NOTIFY_EMPTINESS_BACKUP_REMOVER_FOR_DIRECTORY'
    LANGUAGE_KEY_NOTIFY_EMPTINESS_BACKUP_REMOVER_FOR_SINGLE_FILE = '#_NOTIFY_EMPTINESS_BACKUP_REMOVER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_NOTIFY_EMPTINESS_MONITORING_LOG_VIEWER_TWO = '#_NOTIFY_EMPTINESS_MONITORING_LOG_VIEWER_TWO'
    LANGUAGE_KEY_NOTIFY_EMPTINESS_MONITORING_REMOVER_AND_LOG_VIEWER_FOR_DIRECTORY = '#_NOTIFY_EMPTINESS_MONITORING_REMOVER_AND_LOG_VIEWER_FOR_DIRECTORY'
    LANGUAGE_KEY_NOTIFY_EMPTINESS_MONITORING_REMOVER_AND_LOG_VIEWER_FOR_SINGLE_FILE = '#_NOTIFY_EMPTINESS_MONITORING_REMOVER_AND_LOG_VIEWER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_OK = '#_OK'
    LANGUAGE_KEY_OPEN_AUTOSTART_BACKUP = '#_OPEN_AUTOSTART_BACKUP'
    LANGUAGE_KEY_OPEN_AUTOSTART_MONITORING = '#_OPEN_AUTOSTART_MONITORING'
    LANGUAGE_KEY_OPEN_BACKUP_CONFIGURATOR = '#_OPEN_BACKUP_CONFIGURATOR'
    LANGUAGE_KEY_OPEN_BACKUP_CONFIGURATOR_FOR_DIRECTORY = '#_OPEN_BACKUP_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_OPEN_BACKUP_CONFIGURATOR_FOR_SINGLE_FILE = '#_OPEN_BACKUP_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_OPEN_BACKUP_DIRECTORY_SELECTION = '#_OPEN_BACKUP_DIRECTORY_SELECTION'
    LANGUAGE_KEY_OPEN_BACKUP_REMOVER_FOR_DIRECTORY = '#_OPEN_BACKUP_REMOVER_FOR_DIRECTORY'
    LANGUAGE_KEY_OPEN_BACKUP_REMOVER_FOR_SINGLE_FILE = '#_OPEN_BACKUP_REMOVER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_OPEN_LANGUAGE_SELECTION = '#_OPEN_LANGUAGE_SELECTION'
    LANGUAGE_KEY_OPEN_MONITORING_CONFIGURATOR = '#_OPEN_MONITORING_CONFIGURATOR'
    LANGUAGE_KEY_OPEN_MONITORING_CONFIGURATOR_FOR_DIRECTORY = '#_OPEN_MONITORING_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_OPEN_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE = '#_OPEN_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_OPEN_MONITORING_DIRECTORY_SELECTION = '#_OPEN_MONITORING_DIRECTORY_SELECTION'
    LANGUAGE_KEY_OPEN_MONITORING_LOG_VIEWER = '#_OPEN_MONITORING_LOG_VIEWER'
    LANGUAGE_KEY_OPEN_MONITORING_LOG_VIEWER_FOR_DIRECTORY = '#_OPEN_MONITORING_LOG_VIEWER_FOR_DIRECTORY'
    LANGUAGE_KEY_OPEN_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE = '#_OPEN_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_OPEN_MONITORING_REMOVER_FOR_DIRECTORY = '#_OPEN_MONITORING_REMOVER_FOR_DIRECTORY'
    LANGUAGE_KEY_OPEN_MONITORING_REMOVER_FOR_SINGLE_FILE = '#_OPEN_MONITORING_REMOVER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_OPEN_REQUIREMENTS = '#_OPEN_REQUIREMENTS'
    LANGUAGE_KEY_OPEN_SETTINGS = '#_OPEN_SETTINGS'
    LANGUAGE_KEY_OPERATING_SYSTEM = '#_OPERATING_SYSTEM'
    LANGUAGE_KEY_PATH = '#_PATH'
    LANGUAGE_KEY_POTENTIALLY_BY = '#_POTENTIALLY_BY'
    LANGUAGE_KEY_PROMPT_AUTOSTART_BACKUP = '#_PROMPT_AUTOSTART_BACKUP'
    LANGUAGE_KEY_PROMPT_AUTOSTART_MONITORING = '#_PROMPT_AUTOSTART_MONITORING'
    LANGUAGE_KEY_PROMPT_BACKUP_CONFIGURATOR = '#_PROMPT_BACKUP_CONFIGURATOR'
    LANGUAGE_KEY_PROMPT_BACKUP_CONFIGURATOR_FOR_DIRECTORY = '#_PROMPT_BACKUP_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_PROMPT_BACKUP_CONFIGURATOR_FOR_SINGLE_FILE = '#_PROMPT_BACKUP_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_PROMPT_BACKUP_DIRECTORY_SELECTION = '#_PROMPT_BACKUP_DIRECTORY_SELECTION'
    LANGUAGE_KEY_PROMPT_BACKUP_REMOVER_FOR_DIRECTORY_ONE = '#_PROMPT_BACKUP_REMOVER_FOR_DIRECTORY_ONE'
    LANGUAGE_KEY_PROMPT_BACKUP_REMOVER_FOR_DIRECTORY_TWO = '#_PROMPT_BACKUP_REMOVER_FOR_DIRECTORY_TWO'
    LANGUAGE_KEY_PROMPT_BACKUP_REMOVER_FOR_SINGLE_FILE_ONE = '#_PROMPT_BACKUP_REMOVER_FOR_SINGLE_FILE_ONE'
    LANGUAGE_KEY_PROMPT_BACKUP_REMOVER_FOR_SINGLE_FILE_TWO = '#_PROMPT_BACKUP_REMOVER_FOR_SINGLE_FILE_TWO'
    LANGUAGE_KEY_PROMPT_LANGUAGE_SELECTION = '#_PROMPT_LANGUAGE_SELECTION'
    LANGUAGE_KEY_PROMPT_MAIN_MENU = '#_PROMPT_MAIN_MENU'
    LANGUAGE_KEY_PROMPT_MONITORING_CONFIGURATOR = '#_PROMPT_MONITORING_CONFIGURATOR'
    LANGUAGE_KEY_PROMPT_MONITORING_CONFIGURATOR_FOR_DIRECTORY = '#_PROMPT_MONITORING_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_PROMPT_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE = '#_PROMPT_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_PROMPT_MONITORING_DIRECTORY_SELECTION = '#_PROMPT_MONITORING_DIRECTORY_SELECTION'
    LANGUAGE_KEY_PROMPT_MONITORING_LOG_VIEWER = '#_PROMPT_MONITORING_LOG_VIEWER'
    LANGUAGE_KEY_PROMPT_MONITORING_LOG_VIEWER_FOR_DIRECTORY_ONE = '#_PROMPT_MONITORING_LOG_VIEWER_FOR_DIRECTORY_ONE'
    LANGUAGE_KEY_PROMPT_MONITORING_LOG_VIEWER_FOR_DIRECTORY_TWO = '#_PROMPT_MONITORING_LOG_VIEWER_FOR_DIRECTORY_TWO'
    LANGUAGE_KEY_PROMPT_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_ONE = '#_PROMPT_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_ONE'
    LANGUAGE_KEY_PROMPT_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_TWO = '#_PROMPT_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE_TWO'
    LANGUAGE_KEY_PROMPT_MONITORING_REMOVER_FOR_DIRECTORY_ONE = '#_PROMPT_MONITORING_REMOVER_FOR_DIRECTORY_ONE'
    LANGUAGE_KEY_PROMPT_MONITORING_REMOVER_FOR_DIRECTORY_TWO = '#_PROMPT_MONITORING_REMOVER_FOR_DIRECTORY_TWO'
    LANGUAGE_KEY_PROMPT_MONITORING_REMOVER_FOR_SINGLE_FILE_ONE = '#_PROMPT_MONITORING_REMOVER_FOR_SINGLE_FILE_ONE'
    LANGUAGE_KEY_PROMPT_MONITORING_REMOVER_FOR_SINGLE_FILE_TWO = '#_PROMPT_MONITORING_REMOVER_FOR_SINGLE_FILE_TWO'
    LANGUAGE_KEY_PROMPT_REQUIREMENTS_FOR_LINUX = '#_PROMPT_REQUIREMENTS_FOR_LINUX'
    LANGUAGE_KEY_PROMPT_REQUIREMENTS_FOR_WINDOWS = '#_PROMPT_REQUIREMENTS_FOR_WINDOWS'
    LANGUAGE_KEY_PROMPT_ROOT_PASSWORD_FOR_LINUX = '#_PROMPT_ROOT_PASSWORD_FOR_LINUX'
    LANGUAGE_KEY_PROMPT_SETTINGS = '#_PROMPT_SETTINGS'
    LANGUAGE_KEY_REQUIREMENTS_STATUS = '#_REQUIREMENTS_STATUS'
    LANGUAGE_KEY_SCREEN_AUTOSTART_BACKUP = '#_SCREEN_AUTOSTART_BACKUP'
    LANGUAGE_KEY_SCREEN_AUTOSTART_MONITORING = '#_SCREEN_AUTOSTART_MONITORING'
    LANGUAGE_KEY_SCREEN_BACKUP_CONFIGURATOR = '#_SCREEN_BACKUP_CONFIGURATOR'
    LANGUAGE_KEY_SCREEN_BACKUP_CONFIGURATOR_FOR_DIRECTORY = '#_SCREEN_BACKUP_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_SCREEN_BACKUP_CONFIGURATOR_FOR_SINGLE_FILE = '#_SCREEN_BACKUP_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_SCREEN_BACKUP_DIRECTORY_SELECTION = '#_SCREEN_BACKUP_DIRECTORY_SELECTION'
    LANGUAGE_KEY_SCREEN_BACKUP_REMOVER_FOR_DIRECTORY = '#_SCREEN_BACKUP_REMOVER_FOR_DIRECTORY'
    LANGUAGE_KEY_SCREEN_BACKUP_REMOVER_FOR_SINGLE_FILE = '#_SCREEN_BACKUP_REMOVER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_SCREEN_LANGUAGE_SELECTION = '#_SCREEN_LANGUAGE_SELECTION'
    LANGUAGE_KEY_SCREEN_MAIN_MENU = '#_SCREEN_MAIN_MENU'
    LANGUAGE_KEY_SCREEN_MONITORING_CONFIGURATOR = '#_SCREEN_MONITORING_CONFIGURATOR'
    LANGUAGE_KEY_SCREEN_MONITORING_CONFIGURATOR_FOR_DIRECTORY = '#_SCREEN_MONITORING_CONFIGURATOR_FOR_DIRECTORY'
    LANGUAGE_KEY_SCREEN_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE = '#_SCREEN_MONITORING_CONFIGURATOR_FOR_SINGLE_FILE'
    LANGUAGE_KEY_SCREEN_MONITORING_DIRECTORY_SELECTION = '#_SCREEN_MONITORING_DIRECTORY_SELECTION'
    LANGUAGE_KEY_SCREEN_MONITORING_LOG_VIEWER = '#_SCREEN_MONITORING_LOG_VIEWER'
    LANGUAGE_KEY_SCREEN_MONITORING_LOG_VIEWER_FOR_DIRECTORY = '#_SCREEN_MONITORING_LOG_VIEWER_FOR_DIRECTORY'
    LANGUAGE_KEY_SCREEN_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE = '#_SCREEN_MONITORING_LOG_VIEWER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_SCREEN_MONITORING_REMOVER_FOR_DIRECTORY = '#_SCREEN_MONITORING_REMOVER_FOR_DIRECTORY'
    LANGUAGE_KEY_SCREEN_MONITORING_REMOVER_FOR_SINGLE_FILE = '#_SCREEN_MONITORING_REMOVER_FOR_SINGLE_FILE'
    LANGUAGE_KEY_SCREEN_SETTINGS = '#_SCREEN_SETTINGS'
    LANGUAGE_KEY_TARGET = '#_TARGET'
    LANGUAGE_KEY_WELCOME_MESSAGE = '#_WELCOME_MESSAGE'
    LANGUAGE_KEY_SCREEN_REQUIREMENTS = '#_SCREEN_REQUIREMENTS'

    # Constants for the storage of various trivial literals.
    LITERAL_ACCESSED_AT = 'ACCESSED_AT: '
    LITERAL_ADDED_AT = 'ADDED_AT'
    LITERAL_ADDED_BY = 'ADDED_BY'
    LITERAL_AS_DIRECTORY = 'AS_DIRECTORY'
    LITERAL_BACKUP = 'BACKUP'
    LITERAL_BACKUP_DIRNAME = 'BACKUP_DIRNAME'
    LITERAL_BACKUP_DIRPATH = 'BACKUP_DIRPATH'
    LITERAL_BACKUP_PARENT_DIRPATH = 'BACKUP_PARENT_DIRPATH'
    LITERAL_COMMAND = '-Command'
    LITERAL_DISABLED = 'DISABLED'
    LITERAL_ENABLED = 'ENABLED'
    LITERAL_IS_DIRECTORY = 'IS_DIRECTORY'
    LITERAL_LINUX = 'LINUX'
    LITERAL_LOCALE_CODE_ENGLISH = 'EN'
    LITERAL_LOCALE_CODE_FRENCH = 'FR'
    LITERAL_LOG_FILENAME = 'LOG_FILENAME'
    LITERAL_LOG_FILEPATH = 'LOG_FILEPATH'
    LITERAL_MODIFIED_AT = 'MODIFIED_AT: '
    LITERAL_MONITORING = 'MONITORING'
    LITERAL_NO = 'n'
    LITERAL_NOT_OK = 'NOT OK'
    LITERAL_OK = 'OK'
    LITERAL_ORPHANAGE = 'orphanage'
    LITERAL_PARENT_DIRPATH = 'PARENT_DIRPATH'
    LITERAL_PATH = 'PATH'
    LITERAL_PHASE_ONE = 'PHASE_ONE'
    LITERAL_PHASE_TWO = 'PHASE_TWO'
    LITERAL_POTENTIALLY_BY = 'POTENTIALLY_BY: '
    LITERAL_POWERSHELL = 'powershell'
    LITERAL_TARGET = 'TARGET: '
    LITERAL_WINDOWS = 'WINDOWS'
    LITERAL_WINDOWS_OS_NAME = 'nt'
    LITERAL_YES = 'y'
    LITERAL_ZERO = '0'
    
    # Constants for the storage of literals in relation to the monitoring service.
    MONITORING_FILENAME = '_.json'
    MONITORING_LOCK_FILENAME_LINUX = '.MONITORING_ENABLED.lock'
    MONITORING_LOCK_FILENAME_WINDOWS = 'MONITORING_ENABLED.lock'
    MONITORING_LOG_FILE_EXTENSION = '.log'
    MONITORING_SERVICE_FILENAME = 'monitoring_service.py'
    
    # Constants for the storage of literals in relation to the properties json file.
    PROPERTIES_FILENAME = 'properties.json'
    PROPERTIES_KEY_BACKUP_AUTOSTART_STATUS = 'BACKUP_AUTOSTART_STATUS'
    PROPERTIES_KEY_BACKUP_DIRECTORY = 'BACKUP_DIRECTORY'
    PROPERTIES_KEY_LANGUAGE = 'LANGUAGE'
    PROPERTIES_KEY_MONITORING_AUTOSTART_STATUS = 'MONITORING_AUTOSTART_STATUS'
    PROPERTIES_KEY_MONITORING_DIRECTORY = 'MONITORING_DIRECTORY'
    PROPERTIES_KEY_REQUIREMENTS_STATUS = 'REQUIREMENTS_STATUS'
    
    # Constants for the storage of regular expression.
    REGEX_LINUX_VALID_PATH = r'^(\/)(?:[^<>:"/\n]*(\/)?)*[^<>:"/\n]*$'
    REGEX_WINDOWS_VALID_PATH = r'^(?:[a-zA-Z]:)?(\\|/)(?:[^<>:"/\\|?*\n]+(\\|/)?)*[^<>:"/\\|?*\n]*$'
    
    # Constant for the storage of the strict access time lock file name.
    STRICT_ACCESS_TIME_LOCK_FILENAME = 'STRICT_ACCESS_TIME_ENABLED.lock'
    
    # Constants for the storage of task descriptions used when scheduling tasks at the task scheduler on Windows.
    TASK_DESCRIPTION_BACKUP = 'BACKUP SERVICE DESCRIPTION'
    TASK_DESCRIPTION_MONITORING = 'MONITORING SERVICE DESCRIPTION'
    
    # Constants for the storage of task names used when scheduling tasks at the task scheduler on Windows.
    TASK_NAME_BACKUP = 'BACKUP SERVICE'
    TASK_NAME_MONITORING = 'MONITORING SERVICE'


    @staticmethod
    def generate_random_string() -> str:
        """
        
        Description:
            Generates and returns a letter-only random string that is of fixed length.
            
        Args:
            None

        Returns:
            str: Letter-only random string of fixed length.

        Raises:
            None
                
        """
        
        # Constant for the storage of the random string length.
        LENGTH = Integer.RANDOM_STRING_LENGTH
        
        # Constant for the storage of the possible characters to use in the generation.
        CHARACTERS = str_lib.ascii_letters
        
        # Construct the random string.
        random_string = ''.join(random.choice(CHARACTERS) for _ in range(LENGTH))
        
        # Return the generated random string.
        return random_string


# If this module is executed as the main program:
if __name__ == "__main__":
    # Ignore.
    pass